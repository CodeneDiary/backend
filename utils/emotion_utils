# ✅ utils/emotion_utils.py
from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
from utils.emotion_labels import label_map

# 감정 라벨 매핑
VALID_EMOTIONS = set(label_map.values())

# ✅ 실제 감정 분석 모델 로딩
tokenizer = AutoTokenizer.from_pretrained(
    "M1NJ1/Multimodal_Sentiment_Analysis",
    trust_remote_code=True
)
model = AutoModelForSequenceClassification.from_pretrained(
    "M1NJ1/Multimodal_Sentiment_Analysis",
    trust_remote_code=True
)

def infer_emotion_with_model(text: str):
    inputs = tokenizer(text, return_tensors="pt", truncation=True)
    with torch.no_grad():
        outputs = model(**inputs)
    logits = outputs.logits
    probs = torch.softmax(logits, dim=1)[0]
    topk = torch.topk(probs, k=3)
    
    # label_map 키(int) 기준 → 감정 라벨로 변환
    idx_to_label = list(label_map.values())
    predicted = [idx_to_label[i] for i in topk.indices.tolist()]
    return predicted

# ✅ 감정 라벨 필터링
def filter_valid_emotions(emotion_list):
    return [e.replace(" ", "") for e in emotion_list if e.replace(" ", "") in VALID_EMOTIONS]
